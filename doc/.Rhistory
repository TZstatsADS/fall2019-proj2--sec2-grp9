ZIPCODE %in% c(10314) ~ "Mid-Island"))
monthly.scores <- df %>%
select(CUISINE.DESCRIPTION, SCORE, DATE) %>%
group_by(CUISINE.DESCRIPTION, DATE) %>%
summarise(AVG_SCORE = mean(SCORE, na.rm = T))
res <- read.csv(file="../data/DOHMH_New_York_City_Restaurant_Inspection_Results.csv")
library(dplyr)
library(ggplot2)
library(lubridate)
#library(zoo)
df <- res %>%
dplyr::select(CUISINE.DESCRIPTION, INSPECTION.DATE, SCORE, ZIPCODE) %>% #Select only relevant columns
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y")))
df <- res %>%
dplyr::select(CUISINE.DESCRIPTION, INSPECTION.DATE, SCORE, ZIPCODE) %>% #Select only relevant columns
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y"))) %>% #Create month variable
filter(CUISINE.DESCRIPTION %in% top.ten.cuisines$Var1 & DATE >= "2015-01-01") %>% # Filter relevant cuisines and disregards old dates 2015
mutate(DATE = substr(DATE,1,7))
df <- res %>%
dplyr::select(CUISINE.DESCRIPTION, INSPECTION.DATE, SCORE, ZIPCODE) %>% #Select only relevant columns
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y"))) %>% #Create month variable
filter(CUISINE.DESCRIPTION %in% top.ten.cuisines$Var1 & DATE >= "2015-01-01") %>% # Filter relevant cuisines and disregards old dates 2015
mutate(DATE = substr(DATE,1,7))
top.ten.cuisines <- top_n(data.frame(table(res$CUISINE.DESCRIPTION)), 10, Freq)
df <- res %>%
dplyr::select(CUISINE.DESCRIPTION, INSPECTION.DATE, SCORE, ZIPCODE) %>% #Select only relevant columns
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y"))) %>% #Create month variable
filter(CUISINE.DESCRIPTION %in% top.ten.cuisines$Var1 & DATE >= "2015-01-01") %>% # Filter relevant cuisines and disregards old dates 2015
mutate(DATE = substr(DATE,1,7))
class(df$DATE)
top.ten.cuisines <- top_n(data.frame(table(res$CUISINE.DESCRIPTION)), 10, Freq)
df <- res %>%
dplyr::select(CUISINE.DESCRIPTION, INSPECTION.DATE, SCORE, ZIPCODE) %>% #Select only relevant columns
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y"))) %>% #Create month variable
filter(CUISINE.DESCRIPTION %in% top.ten.cuisines$Var1 & DATE >= "2015-01-01") %>% # Filter relevant cuisines and disregards old dates 2015
plyr::arrange(DATE) %>%
mutate(DATE = substr(DATE,1,7)) %>%
mutate(NEIGHBOURHOOD = case_when( #Create Neighborhood variable
ZIPCODE %in% c(10453, 10457, 10460) ~ "Central Bronx",
ZIPCODE %in% c(10458, 10467, 10468) ~ "Bronx Park and Fordham",
ZIPCODE %in% c(10451, 10452, 10456) ~ "High Bridge and Morrisania",
ZIPCODE %in% c(10454, 10455, 10459, 10474) ~ "Hunts Point and Mott Haven",
ZIPCODE %in% c(10463, 10471) ~ "Kingsbridge and Riverdale",
ZIPCODE %in% c(10466, 10469, 10470, 104750) ~ "Northeast Bronx",
ZIPCODE %in% c(10461, 10462,10464, 10465, 10472, 10473) ~ "Southeast Bronx",
ZIPCODE %in% c(11212, 11213, 11216, 11233, 11238) ~ "Central Brooklyn	",
ZIPCODE %in% c(11209, 11214, 11228) ~ "Southwest Brooklyn",
ZIPCODE %in% c(11204, 11218, 11219, 11230) ~ "Borough Park",
ZIPCODE %in% c(11234, 11236, 11239) ~ "Canarsie and Flatlands",
ZIPCODE %in% c(11223, 11224, 11229, 11235) ~ "Southern Brooklyn",
ZIPCODE %in% c(11201, 11205, 11215, 11217, 11231) ~ "Northwest Brooklyn",
ZIPCODE %in% c(11203, 11210, 11225, 11226) ~ "Flatbush",
ZIPCODE %in% c(11207, 11208) ~ "East New York and New Lots",
ZIPCODE %in% c(11211, 11222) ~ "Greenpoint",
ZIPCODE %in% c(11220, 11232) ~ "Sunset Park",
ZIPCODE %in% c(11206, 11221, 11237) ~ "Bushwick and Williamsburg",
ZIPCODE %in% c(10026, 10027, 10030, 10037, 10039) ~ "Central Harlem",
ZIPCODE %in% c(10001, 10011, 10018, 10019, 10020, 10036) ~ "Chelsea and Clinton",
ZIPCODE %in% c(10029, 10035) ~ "East Harlem",
ZIPCODE %in% c(10010, 10016, 10017, 10022) ~ "Gramercy Park and Murray Hill",
ZIPCODE %in% c(10012, 10013, 10014) ~ "Greenwich Village and Soho",
ZIPCODE %in% c(10004, 10005, 10006, 10007, 10038, 10280) ~ "Lower Manhattan	",
ZIPCODE %in% c(10002, 10003, 10009) ~ "Lower East Side",
ZIPCODE %in% c(10021, 10028, 10044, 10065, 10075, 10128) ~ "Upper East Side",
ZIPCODE %in% c(10023, 10024, 10025) ~ "Upper West Side",
ZIPCODE %in% c(10031, 10032, 10033, 10034, 10040) ~ "Inwood and Washington Heights",
ZIPCODE %in% c(11361, 11362, 11363, 11364) ~ "Northeast Queens",
ZIPCODE %in% c(11354, 11355, 11356, 11357, 11358, 11359, 11360) ~ "North Queens",
ZIPCODE %in% c(11365, 11366, 11367) ~ "Central Queens",
ZIPCODE %in% c(11412, 11423, 11432, 11433, 11434, 11435, 11436) ~ "Jamaica",
ZIPCODE %in% c(11101, 11102, 11103, 11104, 11105, 11106) ~ "Northwest Queens",
ZIPCODE %in% c(11101, 11102, 11103, 11104, 11105, 11106) ~ "West Central Queens",
ZIPCODE %in% c(11691, 11692, 11693, 11694, 11695, 11697) ~ "Rockaways",
ZIPCODE %in% c(11004, 11005, 11411, 11413, 11422, 11426, 11427, 11428, 11429) ~ "Southeast Queens",
ZIPCODE %in% c(11414, 11415, 11416, 11417, 11418, 11419, 11420, 11421) ~ "Southwest Queens",
ZIPCODE %in% c(11368, 11369, 11370, 11372, 11373, 11377, 11378) ~ "West Queens",
ZIPCODE %in% c(10302, 10303, 10310) ~ "	Port Richmond",
ZIPCODE %in% c(10306, 10307, 10308, 10309, 10312) ~ "South Shore",
ZIPCODE %in% c(10301, 10304, 10305) ~ "Stapleton and St. George",
ZIPCODE %in% c(10314) ~ "Mid-Island"))
monthly.scores <- df %>%
select(CUISINE.DESCRIPTION, SCORE, DATE) %>%
group_by(CUISINE.DESCRIPTION, DATE) %>%
summarise(AVG_SCORE = mean(SCORE, na.rm = T))
View(monthly.scores)
monthly.scores <- df %>%
select(CUISINE.DESCRIPTION, SCORE, DATE) %>%
group_by(CUISINE.DESCRIPTION, DATE) %>%
summarise(AVG_SCORE = round(mean(SCORE, na.rm = T),2))
monthly.scores <- df %>%
select(CUISINE.DESCRIPTION, SCORE, DATE) %>%
group_by(CUISINE.DESCRIPTION, DATE) %>%
summarise(AVG_SCORE = round(mean(SCORE, na.rm = T),1))
save(monthly.scores, file="../output/Monthly_avgscores.RData")
quarter.scores <- read.csv("../data/Quarter_scores.csv")
quarter.scores <- read.csv("..fall2019-proj2--sec2-group9/data/Quarter_scores.csv")
quarter.scores <- read.csv("..fall2019-proj2--sec2-grp9/output/Quarter_scores.RData")
quarter.scores <- read.csv("../fall2019-proj2--sec2-grp9/output/Quarter_scores.RData")
quarter.scores <- read.csv(file="../fall2019-proj2--sec2-grp9/output/Quarter_scores.RData")
quarter.scores <- load(file="../fall2019-proj2--sec2-grp9/output/Quarter_scores.RData")
quarter.scores <- load(file="../output/Quarter_scores.RData")
shiny::runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
df_result_omit <- load(file="../output/score_dist.RData")
quarter.scores <- load(file="../output/Quarter_scores.RData")
load('../data/Restaurant_Inspections.RData')
dt1 = na.omit(res,cols = ZIPCODE)
dt1  = dt1[dt1$INSPECTION.DATE != 01/01/1900,]
dt1 = dt1[dt1$GRADE %in% c("A","B","C"),]
df_result<-matrix(NA,nrow=2000,ncol=6)
colnames(df_result) = c("ZIPCODE","YEAR","A","B","C","AVERAGE_SCORE")
var1 = as.character(unlist(lapply(unique(dt1$ZIPCODE),function(x) rep(x,5))))
View(dt1)
library(shiny)
library(ggplot2)
library(rgdal)
library(dplyr)
library(leaflet)
library(RColorBrewer)
load("../output/score_dist.RData")
load("../output/Quarter_scores.RData")
load("../output/violation.RData")
load("../output/top10violations.RData")
df_result_omit <- df_result_omit %>%
filter(as.numeric(zipcode)>0) %>%
mutate(region=as.character(zipcode))
count.df <- df_result_omit%>%
group_by(region)%>%
summarise(value=mean(average_score))
dt31 <- dt3 %>%
mutate(inspection_year = format(as.Date(INSPECTION.DATE, "%m/%d/%Y"), "%Y"))
View(dt3)
View(dt31)
load('../data/Restaurant_Inspections.RData')
library(dplyr)
library(lubridate)
#Create quarterly data for second graph
quarter.scores <- res %>%
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y"))) %>% #make date variable
filter(DATE >= "2016-01-01") %>% # Filter relevant cuisines and disregards old dates 2015
plyr::arrange(DATE) %>%
mutate(MONTH = month(DATE),           #Extract month
YEAR = substr(year(DATE),3,4), #Extract year
Q = case_when(                 #Extract quarter
MONTH %in% c(1:3) ~ "Q1",
MONTH %in% c(4:6) ~ "Q2",
MONTH %in% c(7:9) ~ "Q3",
MONTH %in% c(9:12) ~ "Q4"),
QUARTER = paste(Q, YEAR, sep="-"),   #Create quarter variable and order it
QUARTER = factor(QUARTER, levels = c("Q1-16", "Q2-16", "Q3-16", "Q4-16",
"Q1-17", "Q2-17", "Q3-17", "Q4-17",
"Q1-18", "Q2-18", "Q3-18", "Q4-18",
"Q1-19", "Q2-19", "Q3-19", "Q4-19"))) %>%
select(CUISINE.DESCRIPTION, SCORE, QUARTER, YEAR) %>%
group_by(CUISINE.DESCRIPTION, QUARTER) %>%
summarise(AVG_SCORE = round(mean(SCORE, na.rm = T),1))
save(quarter.scores, file="../output/Quarter_scores.RData")
View(quarter.scores)
save(quarter.scores, file="../output/Quarter_scores.RData")
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
load("../output/score_dist.RData")
load("../output/Quarter_scores.RData")
load("../output/violation.RData")
load("../output/top10violations.RData")
load('../data/Restaurant_Inspections.RData')
library(dplyr)
library(lubridate)
#Create year data for first graph
dt1 = na.omit(res, cols = ZIPCODE)
dt1  = dt1[dt1$INSPECTION.DATE != 01/01/1900,]
dt1 = dt1[dt1$GRADE %in% c("A","B","C"),]
df_result <- matrix(NA,nrow=2000,ncol=6)
colnames(df_result) = c("ZIPCODE","YEAR","A","B","C","AVERAGE_SCORE")
var1 = as.character(unlist(lapply(unique(dt1$ZIPCODE),function(x) rep(x,5))))
df_result = cbind(var1,rep(c(2015,2016,2017,2018,2019),length(var1)/5))
grades = data.frame(matrix(nrow = length(var1),ncol = 3))
for(i in 1:length(var1)){
grades[i,1] = nrow(dt1[(dt1$ZIPCODE ==
df_result[i,1])&(substring(dt1$INSPECTION.DATE,7,10)==df_result[i,2])&(dt1$GRADE =="A"),])
grades[i,2] = nrow(dt1[(dt1$ZIPCODE ==
df_result[i,1])&(substring(dt1$INSPECTION.DATE,7,10)==df_result[i,2])&(dt1$GRADE =="B"),])
grades[i,3] = nrow(dt1[(dt1$ZIPCODE ==
df_result[i,1])&(substring(dt1$INSPECTION.DATE,7,10)==df_result[i,2])&(dt1$GRADE =="C"),])
}
score = apply(df_result, 1 ,function(x) mean(dt1[(dt1$ZIPCODE == x[1])&(substring(dt1$INSPECTION.DATE,7,10)==x[2]),]$SCORE))
df_result = cbind(df_result,grades,score)
colnames(df_result) = c("zipcode","year","A","B","C","average_score")
df_result_omit<-na.omit(df_result)
save(df_result_omit, file="../output/score_dist.RData")
#Create quarterly data for second graph
quarter.scores <- res %>%
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y"))) %>% #make date variable
filter(DATE >= "2016-01-01") %>% # Filter relevant cuisines and disregards old dates 2015
plyr::arrange(DATE) %>%
mutate(MONTH = month(DATE),           #Extract month
YEAR = substr(year(DATE),3,4), #Extract year
Q = case_when(                 #Extract quarter
MONTH %in% c(1:3) ~ "Q1",
MONTH %in% c(4:6) ~ "Q2",
MONTH %in% c(7:9) ~ "Q3",
MONTH %in% c(9:12) ~ "Q4"),
QUARTER = paste(Q, YEAR, sep="-"),   #Create quarter variable and order it
QUARTER = factor(QUARTER, levels = c("Q1-16", "Q2-16", "Q3-16", "Q4-16",
"Q1-17", "Q2-17", "Q3-17", "Q4-17",
"Q1-18", "Q2-18", "Q3-18", "Q4-18",
"Q1-19", "Q2-19", "Q3-19", "Q4-19"))) %>%
select(CUISINE.DESCRIPTION, SCORE, QUARTER, YEAR) %>%
group_by(CUISINE.DESCRIPTION, QUARTER) %>%
summarise(AVG_SCORE = round(mean(SCORE, na.rm = T),1))
save(quarter.scores, file="../output/Quarter_scores.RData")
# Pre-processing for third graph
insp_date <- as.character(res$INSPECTION.DATE)
month_freq <- c(type = "character")
year_freq <- c(type = "character")
colnames(insp_freq) <-c("Month", "Year")
load('../data/Restaurant_Inspections.RData')
library(dplyr)
library(lubridate)
shiny::runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
df <- read.csv("../output/insp_freq.csv")
freq <- df %>%
group_by(Year, Month) %>%
count() %>%
filter(Year >= 2016)
View(df)
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
# Define UI for application that draws a histogram
shinyUI(navbarPage("Restaurant",
tabPanel("Plots",
sidebarLayout(sidebarPanel(
h5("Each violation of a regulation gets a certain number of points.
The inspection score is the sum of the points."),
checkboxGroupInput("cuisine",
label="Cuisine",
choices=list('American'='American',
'Chinese'='Chinese',
'Cafe'='Cafe/Coffee/Tea',
'Pizza'='Pizza',
'Italian'='Italian',
'Mexican'='Mexican',
'Latin' ='Latin (Cuban, Dominican, Puerto Rican, South & Central American)',
'Japanese'='Japanese',
'Bakery'='Bakery',
'Caribbean'='Caribbean'))),
mainPanel(plotOutput("plot"),
plotOutput("plot2")))),
#verbatimTextOutput("select"),
tabPanel("Violation Type",
sidebarLayout(sidebarPanel(selectInput("year2",label="year",
choices=list("2015"=2015,"2016"=2016,"2017"=2017,"2018"=2018,"2019"=2019))),
mainPanel(plotOutput("plot3"),
tableOutput("table")))),
tabPanel("Zipcode details",
sidebarLayout(sidebarPanel(selectInput("year2",label="year_for_map",
choices=list("2016"=2016,"2017"=2017,
"2018"=2018,"2019"=2019))),
mainPanel(leafletOutput("map",width='100%',height='100%'))))
))
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
load("../output/score_dist.RData")
load("../output/Quarter_scores.RData")
load("../output/violation.RData")
load("../output/top10violations.RData")
df_result_omit <- df_result_omit %>%
filter(as.numeric(zipcode)>0) %>%
mutate(region=as.character(zipcode))
View(df_result_omit)
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
View(df_result_omit)
library(dplyr)
View(df_result_omit)
View(df_result_omit)
View(res)
year_scores <- res %>%
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),3,4)) %>%
select(ZIPCODE, SCORE, YEAR)
View(year_scores)
year_scores <- res %>%
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),3,4)) %>%
select(ZIPCODE, SCORE, YEAR) %>%
drop_na()
year_scores <- res %>%
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),3,4)) %>%
select(ZIPCODE, SCORE, YEAR) %>%
tidyr::drop_na()
View(year_scores)
year_scores <- res %>%
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),3,4)) %>%
select(ZIPCODE, SCORE, YEAR) %>%
filter(YEAR == 2019) %>%
tidyr::drop_na()
year_scores <- res %>%
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),3,4)) %>%
select(ZIPCODE, SCORE, YEAR) %>%
filter(YEAR == 19) %>%
tidyr::drop_na()
year_scores <- res %>%
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),3,4)) %>%
select(ZIPCODE, SCORE, YEAR) %>%
filter(ZIPCODE > 0) %>%
tidyr::drop_na()
View(year_scores)
year_scores <- res %>%
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),3,4)) %>%
select(ZIPCODE, SCORE, YEAR) %>%
filter(ZIPCODE > 0)
year_scores <- res %>%
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),3,4)) %>%
select(ZIPCODE, SCORE, YEAR) %>%
filter(as.numeric(ZIPCODE) > 0)
View(year_scores)
dt1 = na.omit(res, cols = ZIPCODE)
View(dt1)
year_scores <- res %>%
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),3,4)) %>%
select(ZIPCODE, SCORE, YEAR) %>%
tidyr::drop_na()
View(year_scores)
year_scores <- na.omit(year_scores cols=ZIPCODE)
year_scores <- na.omit(year_scores, cols = ZIPCODE)
View(year_scores)
year_scores <- res %>%
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),3,4)) %>%
select(ZIPCODE, SCORE, YEAR) %>%
filter(complete.cases(.))
year_scores <- res %>%
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),3,4)) %>%
select(ZIPCODE, SCORE, YEAR) %>%
filter(complete.cases(.)) %>%
na.omit
View(res)
year_scores <- res %>%
na.omit %>%
select(ZIPCODE,SCORE)
year_scores <- res %>%
na.omit %>%
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),3,4)) %>%
select(ZIPCODE, SCORE, YEAR)
year_scores <- res %>%
na.omit %>%
filter(complete.cases(.)) %>%
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),3,4)) %>%
select(ZIPCODE, SCORE, YEAR)
year_scores <- res %>%
na.omit %>%
filter(complete.cases(.)) %>%
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),3,4))
year_scores <- res %>%
na.omit %>%
filter(complete.cases(.)) %>%
mutate(DATE = as.POSIXct(strptime(as.character(res$INSPECTION.DATE), "%m/%d/%Y")))
year_scores <- res %>%
na.omit %>%
filter(complete.cases(.)) %>%
mutate(DATE = as.POSIXct(strptime(as.character(INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),3,4))) %>%
year_scores <- res %>%
na.omit %>%
filter(complete.cases(.)) %>%
mutate(DATE = as.POSIXct(strptime(as.character(INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),3,4)) %>%
select(ZIPCODE, SCORE, YEAR)
year_scores <- res %>%
na.omit %>%
filter(complete.cases(.)) %>%
mutate(DATE = as.POSIXct(strptime(as.character(INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),3,4)) %>%
select(ZIPCODE, SCORE, YEAR) %>%
group_by(ZIPCODE, YEAR) %>%
summarise(AVG_SCORE = round(mean(SCORE, na.rm = T),1))
View(year_scores)
year_scores <- res %>%
na.omit %>%
filter(complete.cases(.)) %>%
mutate(DATE = as.POSIXct(strptime(as.character(INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),0,4))
year_scores <- res %>%
na.omit %>%
filter(complete.cases(.)) %>%
mutate(DATE = as.POSIXct(strptime(as.character(INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),0,4)) %>%
select(ZIPCODE, SCORE, YEAR) %>%
group_by(ZIPCODE, YEAR) %>%
summarise(AVG_SCORE = round(mean(SCORE, na.rm = T),1)) %>%
filter(YEAR > 2015)
save(year_scores, file="../output/Year_scores.RData")
load("../output/Year_scores.RData")
load("../output/Year_scores.RData")
load("../output/Quarter_scores.RData")
load("../output/violation.RData")
load("../output/top10violations.RData")
#Create year data for first graph
df_result_omit <- res %>%
na.omit %>%
filter(complete.cases(.)) %>%
mutate(DATE = as.POSIXct(strptime(as.character(INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),0,4)) %>%
select(ZIPCODE, SCORE, YEAR) %>%
group_by(ZIPCODE, YEAR) %>%
summarise(AVG_SCORE = round(mean(SCORE, na.rm = T),1)) %>%
filter(YEAR > 2015)
load('../data/Restaurant_Inspections.RData')
library(dplyr)
library(lubridate)
#Create year data for first graph
df_result_omit <- res %>%
na.omit %>%
filter(complete.cases(.)) %>%
mutate(DATE = as.POSIXct(strptime(as.character(INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),0,4)) %>%
select(ZIPCODE, SCORE, YEAR) %>%
group_by(ZIPCODE, YEAR) %>%
summarise(AVG_SCORE = round(mean(SCORE, na.rm = T),1)) %>%
filter(YEAR > 2015)
save(df_result_omit, file="../output/Year_scores.RData")
load("../output/Year_scores.RData")
load("../output/Quarter_scores.RData")
load("../output/violation.RData")
load("../output/top10violations.RData")
df_result_omit <- df_result_omit %>%
filter(as.numeric(zipcode)>0) %>%
mutate(region=as.character(zipcode))
View(df_result_omit)
View(df_result_omit)
df_result_omit <- res %>%
na.omit %>%
filter(complete.cases(.)) %>%
mutate(DATE = as.POSIXct(strptime(as.character(INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),0,4)) %>%
select(ZIPCODE, SCORE, YEAR) %>%
group_by(ZIPCODE, YEAR) %>%
summarise(AVG_SCORE = round(mean(SCORE, na.rm = T),1)) %>%
filter(YEAR > 2015) %>%
rename(ZIPCODE = zipcode, YEAR = year)
load('../data/Restaurant_Inspections.RData')
library(dplyr)
library(lubridate)
#Create year data for first graph
df_result_omit <- res %>%
na.omit %>%
filter(complete.cases(.)) %>%
mutate(DATE = as.POSIXct(strptime(as.character(INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),0,4)) %>%
select(ZIPCODE, SCORE, YEAR) %>%
group_by(ZIPCODE, YEAR) %>%
summarise(AVG_SCORE = round(mean(SCORE, na.rm = T),1)) %>%
filter(YEAR > 2015) %>%
rename(ZIPCODE = zipcode, YEAR = year)
df_result_omit <- res %>%
na.omit %>%
filter(complete.cases(.)) %>%
mutate(DATE = as.POSIXct(strptime(as.character(INSPECTION.DATE), "%m/%d/%Y")),
YEAR = substr(year(DATE),0,4)) %>%
select(ZIPCODE, SCORE, YEAR) %>%
group_by(ZIPCODE, YEAR) %>%
summarise(AVG_SCORE = round(mean(SCORE, na.rm = T),1)) %>%
filter(YEAR > 2015) %>%
rename(zipcode = ZIPCODE, year = YEAR)
View(df_result_omit)
df_result_omit <- res %>%
na.omit %>%
filter(complete.cases(.)) %>%
rename(zipcode = ZIPCOD) %>%
mutate(DATE = as.POSIXct(strptime(as.character(INSPECTION.DATE), "%m/%d/%Y")),
year = substr(year(DATE),0,4)) %>%
select(zipcode, SCORE, year) %>%
group_by(zipcode, year) %>%
summarise(score = round(mean(SCORE, na.rm = T),1)) %>%
filter(year > 2015)
df_result_omit <- res %>%
na.omit %>%
filter(complete.cases(.)) %>%
rename(zipcode = ZIPCODE) %>%
mutate(DATE = as.POSIXct(strptime(as.character(INSPECTION.DATE), "%m/%d/%Y")),
year = substr(year(DATE),0,4)) %>%
select(zipcode, SCORE, year) %>%
group_by(zipcode, year) %>%
summarise(score = round(mean(SCORE, na.rm = T),1)) %>%
filter(year > 2015)
View(df_result_omit)
save(df_result_omit, file="../output/Year_scores.RData")
load("../output/Year_scores.RData")
load("../output/Year_scores.RData")
runApp('~/Documents/GitHub/fall2019-proj2--sec2-grp9/app')
